{
  "rag41": {
    "config": {
      "name": "rag41",
      "type": "rag",
      "description": "Интеллектуальный поиск по кодовой базе с контекстными ответами (gpt-4.1)",
      "version": "1.0.0",
      "owner_id": "system",
      "access": "public",
      "ai_settings": {
        "provider": "openai",
        "model": "gpt-4.1",
        "_max_tokens": 4096,
        "_max_completion_tokens": 4096,
        "_temperature": 1.0,
        "comment": "GPT-5 поддерживает только temperature=1.0"
      },
      "rag_settings": {
        "max_context_chunks": 5,
        "search_threshold": 0.03,
        "chunk_size": 4096,
        "overlap_size": 256,
        "include_filenames": true
      },
      "system_prompt": "Ты помощник программиста. Используй предоставленный контекст из кодовой базы для ответов на вопросы. Если в контексте есть точная информация по вопросу, используй её. Если информации недостаточно, скажи об этом. Отвечай конкретно и по существу.",
      "codebase": "default",
      "response_settings": {
        "max_telegram_length": 4000,
        "create_file_if_long": true,
        "file_format": "md"
      }
    },
    "owner_id": "1119720393"
  },
  "chat41": {
    "config": {
      "name": "chat41",
      "type": "chat",
      "description": "Интеллектуальный чат-агент с поддержкой истории сообщений и контекста файлов (gpt-4.1)",
      "owner_id": "system",
      "access": "public",
      "system_prompt": "Вы - полезный ИИ помощник. Отвечайте на вопросы пользователя кратко и по существу на русском языке. Учитывайте контекст предыдущих сообщений в разговоре. Если у пользователя есть загруженный файл, используйте его содержимое для ответов.",
      "file_prompt": "\n\nУ пользователя есть файл <filename> с содержимым:\n---\n<content>\n---\n\nВы можете ссылаться на этот файл в ответах и отвечать на вопросы по его содержанию.",
      "multi_file_prompt": "\n\nУ пользователя есть <file_count> файлов (объединенный размер: <total_size>):\n<file_list>\n\nОбъединенное содержимое:\n---\n<content>\n---\n\nВы можете ссылаться на эти файлы в ответах и отвечать на вопросы по их содержимому.",
      "history": {
        "enabled": true,
        "max_messages": 20,
        "include_system": false,
        "clear_on_context_change": false,
        "persist": false,
        "show_history_info": false,
        "clear_files_on_history_clear": true
      },
      "ai_settings": {
        "provider": "openai",
        "model": "gpt-4.1",
        "_max_tokens": 4096,
        "_max_completion_tokens": 4096,
        "_temperature": 1.0
      },
      "file_context": {
        "enabled": true,
        "max_content_length": 200000,
        "include_filename": true,
        "auto_include": true,
        "multi_file_mode": "merge",
        "multi_file_mode_": "last",
        "merge_separator": "\n\n========================================\nФайл: {filename}\n========================================\n\n",
        "show_truncation_warning": true
      },
      "response_settings": {
        "max_telegram_length": 4000,
        "create_file_if_long": true,
        "file_format": "md"
      }
    },
    "owner_id": "1119720393"
  },
  "filejob41": {
    "config": {
      "name": "filejob41",
      "type": "fileworker",
      "description": "Пакетная обработка файлов с применением ИИ запросов к каждому файлу (gpt-4.1)",
      "version": "1.0.0",
      "owner_id": "system",
      "access": "public",
      "processing_mode": "independent",
      "// processing_mode": "independent - каждый файл отдельно, sequential - с учетом предыдущих, merged - все файлы одним запросом",
      "chunking": {
        "enabled": false,
        "// enabled": "Включить обработку файлов по частям (чанкам)",
        "chunk_size": 4000,
        "// chunk_size": "Размер одного чанка в символах",
        "overlap_size": 200,
        "// overlap_size": "Размер перекрытия между чанками для сохранения контекста",
        "chunk_mode": "sliding_window",
        "// chunk_mode": "sliding_window - с перекрытием, fixed - фиксированные куски, smart - умное разделение по абзацам/функциям",
        "smart_boundaries": {
          "enabled": true,
          "// enabled": "Пытаться разделять по логическим границам (функции, классы, абзацы)",
          "patterns": [
            "\\n\\nclass ",
            "\\n\\ndef ",
            "\\n\\nasync def ",
            "\\n\\nfunction ",
            "\\n\\nexport ",
            "\\n\\n## ",
            "\\n\\n### ",
            "\\n\\n---",
            "\\n\\n\\n"
          ],
          "// patterns": "Паттерны для определения логических границ разделения"
        },
        "chunk_header_template": "\n[Часть {chunk_num}/{total_chunks} файла {filename}]\n",
        "// chunk_header_template": "Шаблон заголовка для каждого чанка",
        "combine_chunk_results": true,
        "// combine_chunk_results": "Объединять ли результаты обработки чанков одного файла",
        "chunk_result_separator": "\n\n--- Продолжение ---\n\n",
        "// chunk_result_separator": "Разделитель между результатами чанков одного файла",
        "max_chunks_per_file": 50,
        "// max_chunks_per_file": "Максимальное количество чанков для одного файла",
        "process_chunks_sequentially": false,
        "// process_chunks_sequentially": "Обрабатывать чанки последовательно с передачей контекста предыдущих",
        "chunk_context_template": "Это часть {chunk_num} из {total_chunks} файла {filename}. Предыдущий контекст: {previous_context}",
        "// chunk_context_template": "Шаблон контекста для последовательной обработки чанков"
      },
      "concatenate_settings": {
        "enabled": false,
        "// enabled": "Включить режим простой склейки файлов без ИИ обработки",
        "file_header_template": "\n\n{'='*60}\n# Файл: {filename}\n# Размер: {size} байт\n# Путь: {path}\n{'='*60}\n\n",
        "// file_header_template": "Шаблон заголовка для каждого файла. Доступные переменные: {filename}, {path}, {size}, {index}, {total}",
        "file_separator": "\n\n",
        "// file_separator": "Разделитель между файлами",
        "include_toc": true,
        "// include_toc": "Добавить оглавление в начало документа",
        "toc_template": "# Объединенный документ\n\n## Содержание:\n{toc_items}\n\n---\n\n",
        "// toc_template": "Шаблон оглавления. {toc_items} будет заменен на список файлов",
        "toc_item_template": "{index}. [{filename}](#{anchor}) - {size} байт\n",
        "// toc_item_template": "Шаблон элемента оглавления",
        "add_file_anchors": true,
        "// add_file_anchors": "Добавлять якоря для навигации",
        "include_stats": true,
        "// include_stats": "Добавить статистику в конец документа",
        "stats_template": "\n\n---\n\n## Статистика:\n- Всего файлов: {total_files}\n- Общий размер: {total_size}\n- Дата создания: {timestamp}\n",
        "// stats_template": "Шаблон блока статистики",
        "sort_files": "name",
        "// sort_files": "Сортировка файлов: 'name', 'size', 'extension', 'none'",
        "group_by_extension": false,
        "// group_by_extension": "Группировать файлы по расширению",
        "skip_empty_files": true,
        "// skip_empty_files": "Пропускать пустые файлы",
        "max_file_size": 1048576,
        "// max_file_size": "Максимальный размер файла для включения (в байтах)",
        "truncate_large_files": true,
        "// truncate_large_files": "Обрезать большие файлы вместо пропуска",
        "truncate_at": 100000,
        "// truncate_at": "Размер, после которого файл будет обрезан (в символах)",
        "truncate_message": "\n\n[... файл обрезан, показано {shown} из {total} символов ...]\n",
        "// truncate_message": "Сообщение при обрезке файла"
      },
      "merge_settings": {
        "max_total_size": 200000,
        "// max_total_size": "Максимальный размер объединенного контента в символах (200К по умолчанию)",
        "file_separator": "\n\n════════════════════════════════════════\n▶ {filename}\n════════════════════════════════════════\n\n",
        "// file_separator": "Разделитель между файлами при объединении. Доступна переменная {filename}",
        "truncate_message": "\n\n[... содержимое обрезано из-за превышения лимита в {max_size} символов ...]",
        "// truncate_message": "Сообщение при обрезке файла",
        "include_file_list": true,
        "// include_file_list": "Включать ли список обработанных файлов в начало результата",
        "smart_truncate": true,
        "// smart_truncate": "Умная обрезка - пытается сохранить целостность кода/текста"
      },
      "result_separator": "\n\n════════════════════════════════════════\n\n",
      "// result_separator": "Разделитель между результатами обработки файлов в итоговом документе",
      "file_header_template": "╔══════════════════════════════════════╗\n║ Файл: {filename}\n║ Обработан: {timestamp}\n╚══════════════════════════════════════╝\n\n",
      "// file_header_template": "Шаблон заголовка для каждого файла в результате. Доступные переменные: {filename}, {timestamp}",
      "include_source_in_result": false,
      "// include_source_in_result": "Включать ли исходное содержимое файла в результат",
      "max_files_per_job": 100,
      "// max_files_per_job": "Максимальное количество файлов для обработки за одну задачу",
      "show_progress": true,
      "// show_progress": "Показывать ли прогресс обработки в реальном времени",
      "progress_update_interval": 3,
      "// progress_update_interval": "Интервал обновления прогресса в секундах",
      "ai_settings": {
        "provider": "openai",
        "model": "gpt-4.1",
        "_max_tokens": 4000,
        "_max_completion_tokens": 4096,
        "_temperature": 1.0,
        "// comment": "Настройки ИИ для обработки файлов"
      },
      "file_filters": {
        "skip_binary": true,
        "max_file_size": 1048576,
        "// comment": "Фильтры для автоматического пропуска файлов"
      },
      "encoding": {
        "try_encodings": [
          "utf-8",
          "cp1251",
          "latin-1",
          "cp866"
        ],
        "// try_encodings": "Список кодировок для попытки декодирования файлов по порядку",
        "fallback_encoding": "latin-1",
        "// fallback_encoding": "Резервная кодировка, если все остальные не сработали",
        "fallback_errors": "ignore",
        "// fallback_errors": "Как обрабатывать ошибки при резервном декодировании: 'ignore', 'replace', 'strict'"
      },
      "output_format": {
        "type": "markdown",
        "include_toc": true,
        "include_summary": true,
        "// comment": "Формат итогового документа"
      },
      "error_handling": {
        "continue_on_error": true,
        "include_errors_in_result": true,
        "error_prefix": "⚠️ ОШИБКА: ",
        "// comment": "Как обрабатывать ошибки при обработке файлов"
      }
    },
    "owner_id": "1119720393"
  },
  "filejob41chunk": {
    "config": {
      "name": "filejob41chunk",
      "type": "fileworker",
      "description": "Пакетная обработка файлов по частям (chunk_size=4000) с применением ИИ запросов к каждому файлу (gpt-4.1)",
      "version": "1.0.0",
      "owner_id": "system",
      "access": "public",
      "processing_mode": "independent",
      "// processing_mode": "independent - каждый файл отдельно, sequential - с учетом предыдущих, merged - все файлы одним запросом",
      "chunking": {
        "enabled": true,
        "// enabled": "Включить обработку файлов по частям (чанкам)",
        "chunk_size": 4000,
        "// chunk_size": "Размер одного чанка в символах",
        "overlap_size": 200,
        "// overlap_size": "Размер перекрытия между чанками для сохранения контекста",
        "chunk_mode": "smart",
        "// chunk_mode": "sliding_window - с перекрытием, fixed - фиксированные куски, smart - умное разделение по абзацам/функциям",
        "smart_boundaries": {
          "enabled": true,
          "// enabled": "Пытаться разделять по логическим границам (функции, классы, абзацы)",
          "patterns": [
            "\\n\\nclass ",
            "\\n\\ndef ",
            "\\n\\nasync def ",
            "\\n\\nfunction ",
            "\\n\\nexport ",
            "\\n\\n",
            "\\n\\n## ",
            "\\n\\n### ",
            "\\n\\n---",
            "\\n\\n\\n"
          ],
          "// patterns": "Паттерны для определения логических границ разделения"
        },
        "chunk_header_template": "\n[Часть {chunk_num}/{total_chunks} файла {filename}]\n",
        "// chunk_header_template": "Шаблон заголовка для каждого чанка",
        "combine_chunk_results": true,
        "// combine_chunk_results": "Объединять ли результаты обработки чанков одного файла",
        "chunk_result_separator": "\n\n--- Продолжение ---\n\n",
        "// chunk_result_separator": "Разделитель между результатами чанков одного файла",
        "max_chunks_per_file": 50,
        "// max_chunks_per_file": "Максимальное количество чанков для одного файла",
        "process_chunks_sequentially": false,
        "// process_chunks_sequentially": "Обрабатывать чанки последовательно с передачей контекста предыдущих",
        "chunk_context_template": "Это часть {chunk_num} из {total_chunks} файла {filename}. Предыдущий контекст: {previous_context}",
        "// chunk_context_template": "Шаблон контекста для последовательной обработки чанков"
      },
      "concatenate_settings": {
        "enabled": false,
        "// enabled": "Включить режим простой склейки файлов без ИИ обработки",
        "file_header_template": "\n\n{'='*60}\n# Файл: {filename}\n# Размер: {size} байт\n# Путь: {path}\n{'='*60}\n\n",
        "// file_header_template": "Шаблон заголовка для каждого файла. Доступные переменные: {filename}, {path}, {size}, {index}, {total}",
        "file_separator": "\n\n",
        "// file_separator": "Разделитель между файлами",
        "include_toc": true,
        "// include_toc": "Добавить оглавление в начало документа",
        "toc_template": "# Объединенный документ\n\n## Содержание:\n{toc_items}\n\n---\n\n",
        "// toc_template": "Шаблон оглавления. {toc_items} будет заменен на список файлов",
        "toc_item_template": "{index}. [{filename}](#{anchor}) - {size} байт\n",
        "// toc_item_template": "Шаблон элемента оглавления",
        "add_file_anchors": true,
        "// add_file_anchors": "Добавлять якоря для навигации",
        "include_stats": true,
        "// include_stats": "Добавить статистику в конец документа",
        "stats_template": "\n\n---\n\n## Статистика:\n- Всего файлов: {total_files}\n- Общий размер: {total_size}\n- Дата создания: {timestamp}\n",
        "// stats_template": "Шаблон блока статистики",
        "sort_files": "name",
        "// sort_files": "Сортировка файлов: 'name', 'size', 'extension', 'none'",
        "group_by_extension": false,
        "// group_by_extension": "Группировать файлы по расширению",
        "skip_empty_files": true,
        "// skip_empty_files": "Пропускать пустые файлы",
        "max_file_size": 1048576,
        "// max_file_size": "Максимальный размер файла для включения (в байтах)",
        "truncate_large_files": true,
        "// truncate_large_files": "Обрезать большие файлы вместо пропуска",
        "truncate_at": 100000,
        "// truncate_at": "Размер, после которого файл будет обрезан (в символах)",
        "truncate_message": "\n\n[... файл обрезан, показано {shown} из {total} символов ...]\n",
        "// truncate_message": "Сообщение при обрезке файла"
      },
      "merge_settings": {
        "max_total_size": 200000,
        "// max_total_size": "Максимальный размер объединенного контента в символах (200К по умолчанию)",
        "file_separator": "\n\n════════════════════════════════════════\n▶ {filename}\n════════════════════════════════════════\n\n",
        "// file_separator": "Разделитель между файлами при объединении. Доступна переменная {filename}",
        "truncate_message": "\n\n[... содержимое обрезано из-за превышения лимита в {max_size} символов ...]",
        "// truncate_message": "Сообщение при обрезке файла",
        "include_file_list": true,
        "// include_file_list": "Включать ли список обработанных файлов в начало результата",
        "smart_truncate": true,
        "// smart_truncate": "Умная обрезка - пытается сохранить целостность кода/текста"
      },
      "result_separator": "\n\n════════════════════════════════════════\n\n",
      "// result_separator": "Разделитель между результатами обработки файлов в итоговом документе",
      "file_header_template": "╔══════════════════════════════════════╗\n║ Файл: {filename}\n║ Обработан: {timestamp}\n╚══════════════════════════════════════╝\n\n",
      "// file_header_template": "Шаблон заголовка для каждого файла в результате. Доступные переменные: {filename}, {timestamp}",
      "include_source_in_result": false,
      "// include_source_in_result": "Включать ли исходное содержимое файла в результат",
      "max_files_per_job": 100,
      "// max_files_per_job": "Максимальное количество файлов для обработки за одну задачу",
      "show_progress": true,
      "// show_progress": "Показывать ли прогресс обработки в реальном времени",
      "progress_update_interval": 3,
      "// progress_update_interval": "Интервал обновления прогресса в секундах",
      "ai_settings": {
        "provider": "openai",
        "model": "gpt-4.1",
        "_max_tokens": 4000,
        "_max_completion_tokens": 4096,
        "_temperature": 1.0,
        "// comment": "Настройки ИИ для обработки файлов"
      },
      "file_filters": {
        "skip_binary": true,
        "max_file_size": 1048576,
        "// comment": "Фильтры для автоматического пропуска файлов"
      },
      "encoding": {
        "try_encodings": [
          "utf-8",
          "cp1251",
          "latin-1",
          "cp866"
        ],
        "// try_encodings": "Список кодировок для попытки декодирования файлов по порядку",
        "fallback_encoding": "latin-1",
        "// fallback_encoding": "Резервная кодировка, если все остальные не сработали",
        "fallback_errors": "ignore",
        "// fallback_errors": "Как обрабатывать ошибки при резервном декодировании: 'ignore', 'replace', 'strict'"
      },
      "output_format": {
        "type": "markdown",
        "include_toc": true,
        "include_summary": true,
        "// comment": "Формат итогового документа"
      },
      "error_handling": {
        "continue_on_error": true,
        "include_errors_in_result": true,
        "error_prefix": "⚠️ ОШИБКА: ",
        "// comment": "Как обрабатывать ошибки при обработке файлов"
      }
    },
    "owner_id": "1119720393"
  },
  "filejoin": {
    "config": {
      "name": "filejoin",
      "type": "fileworker",
      "description": "Режим простой склейки файлов без ИИ обработки",
      "version": "1.0.0",
      "owner_id": "system",
      "access": "public",
      "processing_mode": "independent",
      "// processing_mode": "independent - каждый файл отдельно, sequential - с учетом предыдущих, merged - все файлы одним запросом",
      "chunking": {
        "enabled": false,
        "// enabled": "Включить обработку файлов по частям (чанкам)",
        "chunk_size": 4000,
        "// chunk_size": "Размер одного чанка в символах",
        "overlap_size": 200,
        "// overlap_size": "Размер перекрытия между чанками для сохранения контекста",
        "chunk_mode": "sliding_window",
        "// chunk_mode": "sliding_window - с перекрытием, fixed - фиксированные куски, smart - умное разделение по абзацам/функциям",
        "smart_boundaries": {
          "enabled": true,
          "// enabled": "Пытаться разделять по логическим границам (функции, классы, абзацы)",
          "patterns": [
            "\\n\\nclass ",
            "\\n\\ndef ",
            "\\n\\nasync def ",
            "\\n\\nfunction ",
            "\\n\\nexport ",
            "\\n\\n## ",
            "\\n\\n### ",
            "\\n\\n---",
            "\\n\\n\\n"
          ],
          "// patterns": "Паттерны для определения логических границ разделения"
        },
        "chunk_header_template": "\n[Часть {chunk_num}/{total_chunks} файла {filename}]\n",
        "// chunk_header_template": "Шаблон заголовка для каждого чанка",
        "combine_chunk_results": true,
        "// combine_chunk_results": "Объединять ли результаты обработки чанков одного файла",
        "chunk_result_separator": "\n\n--- Продолжение ---\n\n",
        "// chunk_result_separator": "Разделитель между результатами чанков одного файла",
        "max_chunks_per_file": 50,
        "// max_chunks_per_file": "Максимальное количество чанков для одного файла",
        "process_chunks_sequentially": false,
        "// process_chunks_sequentially": "Обрабатывать чанки последовательно с передачей контекста предыдущих",
        "chunk_context_template": "Это часть {chunk_num} из {total_chunks} файла {filename}. Предыдущий контекст: {previous_context}",
        "// chunk_context_template": "Шаблон контекста для последовательной обработки чанков"
      },
      "concatenate_settings": {
        "enabled": true,
        "// enabled": "Включить режим простой склейки файлов без ИИ обработки",
        "file_header_template": "\n\n{'='*60}\n# Файл: {filename}\n# Размер: {size} байт\n# Путь: {path}\n{'='*60}\n\n",
        "// file_header_template": "Шаблон заголовка для каждого файла. Доступные переменные: {filename}, {path}, {size}, {index}, {total}",
        "file_separator": "\n\n",
        "// file_separator": "Разделитель между файлами",
        "include_toc": true,
        "// include_toc": "Добавить оглавление в начало документа",
        "toc_template": "# Объединенный документ\n\n## Содержание:\n{toc_items}\n\n---\n\n",
        "// toc_template": "Шаблон оглавления. {toc_items} будет заменен на список файлов",
        "toc_item_template": "{index}. [{filename}](#{anchor}) - {size} байт\n",
        "// toc_item_template": "Шаблон элемента оглавления",
        "add_file_anchors": false,
        "// add_file_anchors": "Добавлять якоря для навигации",
        "include_stats": true,
        "// include_stats": "Добавить статистику в конец документа",
        "stats_template": "\n\n---\n\n## Статистика:\n- Всего файлов: {total_files}\n- Общий размер: {total_size}\n- Дата создания: {timestamp}\n",
        "// stats_template": "Шаблон блока статистики",
        "sort_files": "name",
        "// sort_files": "Сортировка файлов: 'name', 'size', 'extension', 'none'",
        "group_by_extension": false,
        "// group_by_extension": "Группировать файлы по расширению",
        "skip_empty_files": true,
        "// skip_empty_files": "Пропускать пустые файлы",
        "max_file_size": 1048576,
        "// max_file_size": "Максимальный размер файла для включения (в байтах)",
        "truncate_large_files": true,
        "// truncate_large_files": "Обрезать большие файлы вместо пропуска",
        "truncate_at": 100000,
        "// truncate_at": "Размер, после которого файл будет обрезан (в символах)",
        "truncate_message": "\n\n[... файл обрезан, показано {shown} из {total} символов ...]\n",
        "// truncate_message": "Сообщение при обрезке файла"
      },
      "merge_settings": {
        "max_total_size": 200000,
        "// max_total_size": "Максимальный размер объединенного контента в символах (200К по умолчанию)",
        "file_separator": "\n\n════════════════════════════════════════\n▶ {filename}\n════════════════════════════════════════\n\n",
        "// file_separator": "Разделитель между файлами при объединении. Доступна переменная {filename}",
        "truncate_message": "\n\n[... содержимое обрезано из-за превышения лимита в {max_size} символов ...]",
        "// truncate_message": "Сообщение при обрезке файла",
        "include_file_list": true,
        "// include_file_list": "Включать ли список обработанных файлов в начало результата",
        "smart_truncate": true,
        "// smart_truncate": "Умная обрезка - пытается сохранить целостность кода/текста"
      },
      "result_separator": "\n\n════════════════════════════════════════\n\n",
      "// result_separator": "Разделитель между результатами обработки файлов в итоговом документе",
      "file_header_template": "╔══════════════════════════════════════╗\n║ Файл: {filename}\n║ Обработан: {timestamp}\n╚══════════════════════════════════════╝\n\n",
      "// file_header_template": "Шаблон заголовка для каждого файла в результате. Доступные переменные: {filename}, {timestamp}",
      "include_source_in_result": false,
      "// include_source_in_result": "Включать ли исходное содержимое файла в результат",
      "max_files_per_job": 100,
      "// max_files_per_job": "Максимальное количество файлов для обработки за одну задачу",
      "show_progress": true,
      "// show_progress": "Показывать ли прогресс обработки в реальном времени",
      "progress_update_interval": 3,
      "// progress_update_interval": "Интервал обновления прогресса в секундах",
      "ai_settings": {
        "provider": "openai",
        "model": "gpt-4.1",
        "_max_tokens": 4000,
        "_max_completion_tokens": 4096,
        "_temperature": 1.0,
        "// comment": "Настройки ИИ для обработки файлов"
      },
      "file_filters": {
        "skip_binary": true,
        "max_file_size": 1048576,
        "// comment": "Фильтры для автоматического пропуска файлов"
      },
      "encoding": {
        "try_encodings": [
          "utf-8",
          "cp1251",
          "latin-1",
          "cp866"
        ],
        "// try_encodings": "Список кодировок для попытки декодирования файлов по порядку",
        "fallback_encoding": "latin-1",
        "// fallback_encoding": "Резервная кодировка, если все остальные не сработали",
        "fallback_errors": "ignore",
        "// fallback_errors": "Как обрабатывать ошибки при резервном декодировании: 'ignore', 'replace', 'strict'"
      },
      "output_format": {
        "type": "markdown",
        "include_toc": true,
        "include_summary": true,
        "// comment": "Формат итогового документа"
      },
      "error_handling": {
        "continue_on_error": true,
        "include_errors_in_result": true,
        "error_prefix": "⚠️ ОШИБКА: ",
        "// comment": "Как обрабатывать ошибки при обработке файлов"
      }
    },
    "owner_id": "1119720393"
  },
    
  "hero": {
    "config": {
      "name": "hero",
      "description": "HeroCraft Интеллектуальный поиск ответов (nethack агент)",
      "type": "nethack",
      "access": "public",
      "qa_config_path": "./NETHACK/herocraft/config_aifaq.json",
      "access_config_path": "./NETHACK/herocraft/doc_access.json",
      "response_settings": {
        "verbose": true,
        "show_sources": true,
        "max_answer_length": 20000,
        "fallback_message": "К сожалению, не могу найти информацию по вашему запросу в доступных документах."
      },
      "cache_settings": {
        "enabled": true,
        "ttl_seconds": 600
      }
    },
    "owner_id": "1119720393"
  },
  
  "acme": {
    "config": {
      "name": "acme",
      "description": "ACME Corp. Интеллектуальный поиск ответов (nethack агент)",
      "type": "nethack",
      "access": "public",
      "qa_config_path": "./NETHACK/acmecorp/config_aifaq.json",
      "access_config_path": "./NETHACK/acmecorp/doc_access.json",
      "response_settings": {
        "verbose": true,
        "show_sources": true,
        "max_answer_length": 20000,
        "fallback_message": "К сожалению, не могу найти информацию по вашему запросу в доступных документах."
      },
      "cache_settings": {
        "enabled": true,
        "ttl_seconds": 600
      }
    },
    "owner_id": "1119720393"
  },
  "chat_codex": {
    "config": {
      "name": "chat_codex",
      "type": "chat",
      "description": "Специализированный кодинг-ассистент с поддержкой контекста и анализа кода (gpt-5-codex)",
      "owner_id": "system",
      "access": "public",
      "system_prompt": "Вы - экспертный программист-ассистент, специализирующийся на написании, анализе и оптимизации кода.\n\n## ПРОЦЕСС РАЗРАБОТКИ (ОБЯЗАТЕЛЬНО):\n\n### 1️⃣ АНАЛИЗ И ПЛАНИРОВАНИЕ\nПеред написанием кода ВСЕГДА:\n- Проанализируйте требования и уточните неясности\n- Определите входные/выходные данные\n- Выберите оптимальный подход и структуры данных\n- Продумайте edge cases и обработку ошибок\n- Оцените сложность O(n) и потребление памяти\n\n### 2️⃣ АРХИТЕКТУРА РЕШЕНИЯ\n```\n📋 План реализации:\n1. [Основная логика/алгоритм]\n2. [Вспомогательные функции]\n3. [Валидация и обработка ошибок]\n4. [Оптимизации если необходимо]\n```\n\n### 3️⃣ РЕАЛИЗАЦИЯ\nТолько после плана пишите код:\n- Следуйте SOLID принципам\n- Используйте понятные имена (self-documenting code)\n- Добавляйте type hints/annotations\n- Комментируйте только сложную логику\n- Обрабатывайте исключения явно\n\n### 4️⃣ ПРОВЕРКА\n- Валидация edge cases\n- Проверка производительности\n- Security considerations\n- Возможные улучшения\n\n## ФОРМАТ ОТВЕТА:\n```\n💭 Анализ задачи:\n[1-2 предложения о сути задачи]\n\n📐 Подход:\n• Алгоритм: [название/тип]\n• Сложность: O(...) время, O(...) память\n• Ключевые структуры: [что используем]\n\n📝 План:\n1. ...\n2. ...\n3. ...\n\n💻 Решение:\n[код с комментариями]\n\n✅ Тесты/Примеры:\n[примеры использования]\n\n💡 Примечания:\n[если есть важные замечания]\n```\n\nЯзык: русский для анализа/планирования, английский для кода.",
      "file_prompt": "\n\n📁 Контекст файла: <filename>\n```<file_extension>\n<content>\n```\n\n⚙️ При анализе кода:\n1. Изучите существующую архитектуру\n2. Определите паттерны и конвенции\n3. Найдите точки интеграции\n4. Сохраняйте совместимость\n5. Предложите улучшения если уместно",
      "multi_file_prompt": "\n\n📂 Проектный контекст: <file_count> файлов (<total_size>)\nСтруктура:\n<file_list>\n\n<content>\n\n🏗️ При работе с проектом:\n1. Проанализируйте общую архитектуру\n2. Выявите зависимости между модулями\n3. Определите точки расширения\n4. Поддерживайте консистентность стиля\n5. Учитывайте влияние изменений на другие части",
      "history": {
        "enabled": true,
        "max_messages": 30,
        "include_system": false,
        "clear_on_context_change": false,
        "persist": true,
        "show_history_info": false,
        "clear_files_on_history_clear": false
      },
      "ai_settings": {
        "provider": "openai",
        "model": "gpt-5-codex",
        "_max_tokens": 8192,
        "_max_completion_tokens": 8192,
        "_temperature": 0.2,
        "_top_p": 0.95,
        "_frequency_penalty": 0.0,
        "_presence_penalty": 0.0
      },
      "file_context": {
        "enabled": true,
        "max_content_length": 500000,
        "include_filename": true,
        "auto_include": true,
        "multi_file_mode": "merge",
		"merge_separator": "\n\n<file name='{filename}'>\n```{extension}\n",
		"merge_suffix": "\n\n```\n</file>\n\n",
        "show_truncation_warning": true,
        "supported_extensions": [
          ".py",
          ".js",
          ".ts",
          ".jsx",
          ".tsx",
          ".java",
          ".cpp",
          ".c",
          ".cs",
          ".go",
          ".rs",
          ".php",
          ".rb",
          ".swift",
          ".kt",
          ".scala",
          ".r",
          ".m",
          ".sql",
          ".html",
          ".css",
          ".scss",
          ".json",
          ".yaml",
          ".xml",
          ".md",
          ".dockerfile",
          ".sh",
          ".bat"
        ],
        "auto_detect_language": true
      },
      "response_settings": {
        "max_telegram_length": 4000,
        "create_file_if_long": true,
        "file_format": "md",
        "code_block_style": "fenced",
        "syntax_highlighting": true
      },
      "code_specific": {
        "auto_format": true,
        "include_imports": true,
        "error_handling": true,
        "type_hints": true,
        "docstrings": "minimal",
        "test_generation": "on_request",
        "complexity_analysis": true,
        "security_check": true,
        "performance_hints": true
      },
      "planning_enforcement": {
        "require_analysis": true,
        "require_complexity_estimation": true,
        "require_approach_justification": true,
        "show_alternatives": false,
        "explain_tradeoffs": true
      },
      "context_enhancement": {
        "remember_variables": true,
        "track_functions": true,
        "maintain_style": true,
        "progressive_refinement": true,
        "learn_from_corrections": true
      },
      "examples_mode": {
        "provide_usage_examples": true,
        "include_edge_cases": true,
        "show_common_mistakes": false
      }
    },
    "owner_id": "1119720393"
  }
}