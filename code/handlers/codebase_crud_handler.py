# code/handlers/codebase_crud_handler.py
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∫–æ–¥–æ–≤—ã–º–∏ –±–∞–∑–∞–º–∏
"""

import re
import logging
from datetime import datetime
from aiogram import types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from utils.markdown_utils import escape_markdown_v2

logger = logging.getLogger(__name__)

class CodebaseCrudStates(StatesGroup):
    create_name = State()
    create_description = State()


class CodebaseCrudHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–¥–æ–≤—ã–º–∏ –±–∞–∑–∞–º–∏"""
    
    def __init__(self, bot, user_manager, codebase_manager):
        self.bot = bot
        self.user_manager = user_manager
        self.codebase_manager = codebase_manager
    
    async def cmd_create_codebase(self, message: types.Message, state: FSMContext):
        """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã"""
        user_id = str(message.from_user.id)
        
        if not await self.user_manager.is_active(user_id):
            await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É\\.", parse_mode="MarkdownV2")
            return
        
        await message.reply(
            "üÜï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã \\(3\\-50 —Å–∏–º–≤–æ–ª–æ–≤\\):",
            parse_mode="MarkdownV2"
        )
        await state.set_state(CodebaseCrudStates.create_name)
    
    async def process_codebase_name(self, message: types.Message, state: FSMContext):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã"""
        # –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –Ω–∞ –ø—Ä–æ–±–µ–ª—ã –∏ —É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
        name = message.text.replace('\n', ' ').replace('\r', ' ').strip()
        name = ' '.join(name.split())
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è
        is_valid, error_msg = self.codebase_manager.validate_codebase_name(name)
        if not is_valid:
            error_escaped = escape_markdown_v2(error_msg)
            await message.reply(
                f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ\\.\n{error_escaped}\n\n"
                "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n"
                "‚Ä¢ –û—Ç 3 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤\n"
                "‚Ä¢ –¢–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–µ/–∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã –∏ –¥–µ—Ñ–∏—Å\n"
                "‚Ä¢ –î–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –±—É–∫–≤—ã –∏–ª–∏ —Ü–∏—Ñ—Ä—ã\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:",
                parse_mode="MarkdownV2"
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –ø–∞–ø–∫–∞
        user_id = str(message.from_user.id)
        folder_name = name.replace(" ", "_").lower()
        folder_name = re.sub(r'[^a-z0-9_\-–∞-—è—ë]', '', folder_name)
        
        if self.codebase_manager.codebase_folder_exists(user_id, folder_name):
            folder_escaped = escape_markdown_v2(folder_name)
            await message.reply(
                f"‚ùå –ö–æ–¥–æ–≤–∞—è –±–∞–∑–∞ —Å –ø–æ—Ö–æ–∂–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\\.\n"
                f"–ü–∞–ø–∫–∞: {folder_escaped}\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:",
                parse_mode="MarkdownV2"
            )
            return
        
        await state.update_data(codebase_name=name)
        
        name_escaped = escape_markdown_v2(name)
        folder_escaped = escape_markdown_v2(folder_name)
        
        await message.reply(
            f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ: {name_escaped}\n"
            f"üìÅ –ü–∞–ø–∫–∞ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞: {folder_escaped}\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ/–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã\n"
            "\\(–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '\\-' —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å\\):",
            parse_mode="MarkdownV2"
        )
        await state.set_state(CodebaseCrudStates.create_description)
    
    async def process_codebase_description(self, message: types.Message, state: FSMContext):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã –∏ —Å–æ–∑–¥–∞–Ω–∏–µ"""
        logger.info(f"process_codebase_description –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
        
        # –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –Ω–∞ –ø—Ä–æ–±–µ–ª—ã
        description = message.text.replace('\n', ' ').replace('\r', ' ').strip() if message.text else ""
        description = ' '.join(description.split())
        
        logger.info(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {repr(description)}")
        
        if description == "-":
            description = ""
        elif len(description) > 500:
            await message.reply(
                "‚ùå –û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ \\(–º–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤\\)\\.\n"
                "–°–æ–∫—Ä–∞—Ç–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:",
                parse_mode="MarkdownV2"
            )
            return
        
        data = await state.get_data()
        user_id = str(message.from_user.id)
        
        logger.info(f"–°–æ–∑–¥–∞–µ–º –∫–æ–¥–æ–≤—É—é –±–∞–∑—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–¥–æ–≤—É—é –±–∞–∑—É
        try:
            codebase_id = await self.codebase_manager.create_codebase(
                user_id,
                data["codebase_name"],
                description
            )
            
            logger.info(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è: {codebase_id}")
            
            if codebase_id:
                folder_name = data['codebase_name'].replace(' ', '_').lower()
                folder_name = re.sub(r'[^a-z0-9_\-–∞-—è—ë]', '', folder_name)
                
                desc_display = description if description else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
                if len(desc_display) > 50:
                    desc_display = desc_display[:50] + "..."
                
                name_escaped = escape_markdown_v2(data['codebase_name'])
                id_escaped = escape_markdown_v2(codebase_id)
                folder_escaped = escape_markdown_v2(folder_name)
                desc_escaped = escape_markdown_v2(desc_display)
                
                await message.reply(
                    f"‚úÖ –ö–æ–¥–æ–≤–∞—è –±–∞–∑–∞ '{name_escaped}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞\\!\n\n"
                    f"üìå –ù–æ–º–µ—Ä: \\#{id_escaped}\n"
                    f"üìÅ –ü–∞–ø–∫–∞: {folder_escaped}\n"
                    f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {desc_escaped}\n"
                    f"üîí –°—Ç–∞—Ç—É—Å: –ü—Ä–∏–≤–∞—Ç–Ω–∞—è\n"
                    f"‚úÖ –ê–∫—Ç–∏–≤–Ω–∞\n\n"
                    "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ñ–∞–π–ª—ã –≤ —ç—Ç—É –∫–æ–¥–æ–≤—É—é –±–∞–∑—É\\.\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /codebases –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –±–∞–∑\\.",
                    parse_mode="MarkdownV2"
                )
                
                logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Å–æ–∑–¥–∞–ª –∫–æ–¥–æ–≤—É—é –±–∞–∑—É #{codebase_id}: {data['codebase_name']}")
            else:
                await message.reply(
                    f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã\\.\n"
                    f"–í–æ–∑–º–æ–∂–Ω–æ, –ø–∞–ø–∫–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\\.\n"
                    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ /create\\_codebase",
                    parse_mode="MarkdownV2"
                )
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–¥–æ–≤—É—é –±–∞–∑—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã: {e}", exc_info=True)
            error_escaped = escape_markdown_v2(str(e))
            await message.reply(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–¥–æ–≤–æ–π –±–∞–∑—ã\\.\n"
                f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã\\.",
                parse_mode="MarkdownV2"
            )
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
        await state.clear()
        logger.info(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—á–∏—â–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")