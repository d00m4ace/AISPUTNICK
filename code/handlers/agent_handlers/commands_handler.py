# code/handlers/agent_handlers/commands_handler.py

import logging
from datetime import datetime
from aiogram import types
from aiogram.fsm.context import FSMContext
from aiogram.types import BufferedInputFile
from utils.markdown_utils import escape_markdown_v2

logger = logging.getLogger(__name__)

class CommandsHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞–º–∏"""
    
    def __init__(self, parent_handler):
        self.parent = parent_handler
        self.bot = parent_handler.bot

    async def cmd_agent_stop(self, message: types.Message, state: FSMContext):
        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ª—é–±–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞"""
        user_id = str(message.from_user.id)
    
        if not await self.parent.user_manager.is_active(user_id):
            await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.")
            return
    
        stopped_agents = []
    
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
        if hasattr(self.parent, 'chat_handler') and user_id in self.parent.chat_handler.active_chat_sessions:
            agent_name = self.parent.chat_handler.active_chat_sessions[user_id].get('agent_name', 'chat')
            del self.parent.chat_handler.active_chat_sessions[user_id]
            await state.clear()
            stopped_agents.append(('chat', agent_name))
            logger.info(f"–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–∞—Ç —Å –∞–≥–µ–Ω—Ç–æ–º {agent_name} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ filejob –∑–∞–¥–∞—á–∏
        filejob_stopped = False
        if 'filejob' in self.parent.system_agents:
            filejob_agent = self.parent.system_agents['filejob']
            jobs_to_cancel = []
        
            # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            for job_id, job_info in filejob_agent.active_jobs.items():
                if job_info['user_id'] == user_id and not job_info.get('cancelled', False):
                    jobs_to_cancel.append(job_id)
        
            # –û—Ç–º–µ–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
            for job_id in jobs_to_cancel:
                if filejob_agent.cancel_job(job_id):
                    filejob_stopped = True
                    logger.info(f"–û—Ç–º–µ–Ω–µ–Ω–∞ filejob –∑–∞–¥–∞—á–∞ {job_id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
            if filejob_stopped:
                stopped_agents.append(('filejob', '–ø–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞'))
    
        # 3. –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã –¥–ª—è RAG
        rag_cleared = False
        if 'rag' in self.parent.system_agents:
            rag_agent = self.parent.system_agents['rag']
            if hasattr(rag_agent, 'temp_document_context') and user_id in rag_agent.temp_document_context:
                doc_info = rag_agent.temp_document_context[user_id]
                del rag_agent.temp_document_context[user_id]
                rag_cleared = True
                stopped_agents.append(('rag', f"–¥–æ–∫—É–º–µ–Ω—Ç {doc_info['filename']}"))
                logger.info(f"–û—á–∏—â–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç RAG –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
        # 4. –û—á–∏—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–º –∞–≥–µ–Ω—Ç–µ
        last_agent_cleared = False
        if hasattr(self.parent, '_last_agent_used'):
            if user_id in self.parent._last_agent_used:
                last_agent = self.parent._last_agent_used[user_id]
                del self.parent._last_agent_used[user_id]
                if user_id in self.parent._last_agent_used_time:
                    del self.parent._last_agent_used_time[user_id]
                last_agent_cleared = True
                logger.info(f"–û—á–∏—â–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∞–≥–µ–Ω—Ç–µ {last_agent} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
        # 5. –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤
        files_cleared = 0
    
        # –î–û–ë–ê–í–õ–Ø–ï–ú: –û—á–∏—Å—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º nethack –∞–≥–µ–Ω—Ç–µ
        nethack_cleared = False
        if hasattr(self.parent, '_last_nethack_agent'):
            if user_id in self.parent._last_nethack_agent:
                last_nethack = self.parent._last_nethack_agent[user_id]
                del self.parent._last_nethack_agent[user_id]
                if user_id in self.parent._last_nethack_time:
                    del self.parent._last_nethack_time[user_id]
                nethack_cleared = True
                logger.info(f"–û—á–∏—â–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º nethack –∞–≥–µ–Ω—Ç–µ {last_nethack} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
        # –î–û–ë–ê–í–ò–¢–¨: –û—á–∏—Å—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π nethack —Å–µ—Å—Å–∏–∏
        nethack_session_cleared = False
        if hasattr(self.parent, '_active_nethack_sessions'):
            if user_id in self.parent._active_nethack_sessions:
                session_info = self.parent._active_nethack_sessions[user_id]
                del self.parent._active_nethack_sessions[user_id]
                nethack_session_cleared = True
                logger.info(f"–ó–∞–≤–µ—Ä—à–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è nethack —Å–µ—Å—Å–∏—è {session_info['agent_name']} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

        # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã –≤ chat_handler
        if hasattr(self.parent, 'chat_handler') and hasattr(self.parent.chat_handler, 'user_file_contexts'):
            if user_id in self.parent.chat_handler.user_file_contexts:
                del self.parent.chat_handler.user_file_contexts[user_id]
                files_cleared += 1
    
        # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª—ã –≤ chat –∞–≥–µ–Ω—Ç–µ
        if 'chat' in self.parent.system_agents:
            chat_agent = self.parent.system_agents['chat']
            if hasattr(chat_agent, 'user_file_contexts') and user_id in chat_agent.user_file_contexts:
                files_count = len(chat_agent.user_file_contexts[user_id])
                chat_agent.clear_user_files(user_id)
                files_cleared += files_count
    
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        if stopped_agents or last_agent_cleared or files_cleared > 0:
            response = "‚úÖ *–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∞–≥–µ–Ω—Ç—ã –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã:*\n\n"
        
            for agent_type, details in stopped_agents:
                if agent_type == 'chat':
                    response += f"üí¨ –ó–∞–≤–µ—Ä—à–µ–Ω —á–∞—Ç —Å –∞–≥–µ–Ω—Ç–æ–º *@{escape_markdown_v2(details)}*\n"
                elif agent_type == 'filejob':
                    response += f"üìÇ –û—Ç–º–µ–Ω–µ–Ω–∞ {escape_markdown_v2(details)} —Ñ–∞–π–ª–æ–≤\n"
                elif agent_type == 'rag':
                    response += f"üîç –û—á–∏—â–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç RAG: {escape_markdown_v2(details)}\n"
        
            if files_cleared > 0:
                response += f"üìÑ –û—á–∏—â–µ–Ω–æ —Ñ–∞–π–ª–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤: {files_cleared}\n"
        
            if last_agent_cleared:
                response += f"üîÑ –°–±—Ä–æ—à–µ–Ω–∞ –ø—Ä–∏–≤—è–∑–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –∞–≥–µ–Ω—Ç—É\n"
        
            # –í –±–ª–æ–∫–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –¥–æ–±–∞–≤–∏—Ç—å:
            if nethack_session_cleared:
                response += f"üåê –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è nethack —Å–µ—Å—Å–∏—è\n"

            response += "\n_–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Ä–∞–±–æ—Ç—É —Å –ª—é–±—ã–º –∞–≥–µ–Ω—Ç–æ–º_"
        
            await message.reply(response, parse_mode="MarkdownV2")
        else:
            await message.reply(
                "‚ÑπÔ∏è *–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤*\n\n"
                "–í—Å–µ –∞–≥–µ–Ω—Ç—ã —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã\\.",
                parse_mode="MarkdownV2"
            )

    async def cmd_agent_status(self, message: types.Message):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"""
        user_id = str(message.from_user.id)

        if not await self.parent.user_manager.is_active(user_id):
            await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.")
            return

        active_items = []

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
        if hasattr(self.parent, 'chat_handler') and user_id in self.parent.chat_handler.active_chat_sessions:
            session = self.parent.chat_handler.active_chat_sessions[user_id]
            agent_name = session.get('agent_name', 'chat')
            started_at = session.get('started_at', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        
            # –ü–æ–ª—É—á–∞–µ–º –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            agent = await self.parent._get_agent_instance(user_id, agent_name)
            extra_info = ""
            if agent and hasattr(agent, 'get_user_files_info'):
                files_info = agent.get_user_files_info(user_id)
                if files_info['files_count'] > 0:
                    extra_info = f"\n   üìÅ –§–∞–π–ª–æ–≤: {files_info['files_count']}"
        
            active_items.append(f"üí¨ *–ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç:* @{escape_markdown_v2(agent_name)}\n   –ù–∞—á–∞—Ç: {escape_markdown_v2(started_at[:19] if started_at != '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ' else started_at)}{extra_info}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ filejob –∑–∞–¥–∞—á–∏
        if 'filejob' in self.parent.system_agents:
            filejob_agent = self.parent.system_agents['filejob']
            user_jobs = []
            for job_id, job_info in filejob_agent.active_jobs.items():
                if job_info['user_id'] == user_id and not job_info.get('cancelled', False):
                    processed = job_info.get('processed', 0)
                    total = len(job_info.get('files', []))
                    user_jobs.append(f"   –ó–∞–¥–∞—á–∞: {processed}/{total} —Ñ–∞–π–ª–æ–≤")
    
            if user_jobs:
                active_items.append(f"üìÇ *–ê–∫—Ç–∏–≤–Ω—ã–µ filejob –∑–∞–¥–∞—á–∏:*\n" + "\n".join(user_jobs))

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã RAG
        if 'rag' in self.parent.system_agents:
            rag_agent = self.parent.system_agents['rag']
            if hasattr(rag_agent, 'temp_document_context') and user_id in rag_agent.temp_document_context:
                doc_info = rag_agent.temp_document_context[user_id]
                time_diff = (datetime.now() - doc_info['timestamp']).total_seconds()
                time_remaining = int((1800 - time_diff) / 60)
                if time_remaining > 0:
                    active_items.append(f"üîç *RAG –¥–æ–∫—É–º–µ–Ω—Ç:* {escape_markdown_v2(doc_info['filename'])}\n   –ê–∫—Ç–∏–≤–µ–Ω –µ—â—ë: {time_remaining} –º–∏–Ω")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞
        if hasattr(self.parent, '_last_agent_used') and user_id in self.parent._last_agent_used:
            last_agent = self.parent._last_agent_used[user_id]
            last_time = self.parent._last_agent_used_time.get(user_id)
            if last_time:
                time_ago = int((datetime.now() - last_time).total_seconds() / 60)
                if time_ago < 5:
                    active_items.append(f"üìÑ *–ü–æ—Å–ª–µ–¥–Ω–∏–π –∞–≥–µ–Ω—Ç:* @{escape_markdown_v2(last_agent)}\n   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω: {time_ago} –º–∏–Ω –Ω–∞–∑–∞–¥")

        # –î–û–ë–ê–í–ò–¢–¨: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π nethack —Å–µ—Å—Å–∏–∏
        if hasattr(self.parent, '_active_nethack_sessions') and user_id in self.parent._active_nethack_sessions:
            session = self.parent._active_nethack_sessions[user_id]
            agent_name = session['agent_name']
            elapsed = int((datetime.now() - session['started_at']).total_seconds() / 60)
            remaining = 60*24 - elapsed
            if remaining > 0:
                active_items.append(
                    f"üåê *–ê–∫—Ç–∏–≤–Ω–∞—è nethack —Å–µ—Å—Å–∏—è:* @{escape_markdown_v2(agent_name)}\n"
                    f"   _–ü–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –±–µ–∑ @{escape_markdown_v2(agent_name)}_"
                )

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ chat –∞–≥–µ–Ω—Ç–µ
        if 'chat' in self.parent.system_agents:
            chat_agent = self.parent.system_agents['chat']
            if hasattr(chat_agent, 'get_user_files_info'):
                files_info = chat_agent.get_user_files_info(user_id)
                if files_info['files_count'] > 0:
                    active_items.append(f"üìÑ *–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –≤ —á–∞—Ç:* {files_info['files_count']}\n   –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {files_info['total_size']:,} –±–∞–π—Ç")

        if active_items:
            response = "üìä *–°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:*\n\n"
            response += "\n\n".join(active_items)
            response += "\n\n_–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /agent\\_stop –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤_"
        else:
            response = "‚ÑπÔ∏è *–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤*\n\n"
            response += "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –ª—é–±—ã–º –∞–≥–µ–Ω—Ç–æ–º:\n"
            response += "‚Ä¢ `@chat` \\- –Ω–∞—á–∞—Ç—å —á–∞—Ç\n"
            response += "‚Ä¢ `@rag –∑–∞–ø—Ä–æ—Å` \\- –ø–æ–∏—Å–∫ –≤ –±–∞–∑–µ\n"
            response += "‚Ä¢ `@filejob` \\- –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤"

        await message.reply(response, parse_mode="MarkdownV2")
    
        
    async def cmd_agents(self, message: types.Message):
        """–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ /agents —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ –º–∞–∫—Ä–æ-–∫–æ–º–∞–Ω–¥–∞–º–∏"""
        user_id = str(message.from_user.id)
        
        if not await self.parent.user_manager.is_active(user_id):
            await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.")
            return
        
        text = "*ü§ñ –°–∏—Å—Ç–µ–º–∞ –ò–ò –∞–≥–µ–Ω—Ç–æ–≤*\n\n"
        text += "*–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–≥–µ–Ω—Ç–æ–≤:*\n"
        text += "`@–∏–º—è_–∞–≥–µ–Ω—Ç–∞` \\<–∑–∞–ø—Ä–æ—Å\\> \\- –≤—ã–∑–æ–≤ –∞–≥–µ–Ω—Ç–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º\n"
        text += "`@chat` \\- –Ω–∞—á–∞—Ç—å —á–∞—Ç —Å –ò–ò\n"
        text += "`/stop_chat` \\- –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç\n\n"
        
        text += "*–°–∏—Å—Ç–µ–º–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã \\(–¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ–º\\):*\n"
        
        for agent_name, agent in self.parent.system_agents.items():
            config = agent.get_config()
            # –î–µ–ª–∞–µ–º –∏–º—è –∫–æ–ø–∏—Ä—É–µ–º—ã–º
            text += f"‚Ä¢ `@{agent_name}` \\- {escape_markdown_v2(config.get('description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'))}\n"
            
            if agent_name == 'chat' or config.get('type') == 'chat':
                text += "  üí¨ –ß–∞—Ç\\-—Ä–µ–∂–∏–º —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ñ–∞–π–ª–æ–≤\n"
                # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∂–∏–º —Ñ–∞–π–ª–æ–≤
                file_config = config.get('file_context', {})
                multi_mode = file_config.get('multi_file_mode', 'merge')
                if multi_mode == 'merge':
                    text += "  üìö –†–µ–∂–∏–º: –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤\n"
                else:
                    text += "  üìÑ –†–µ–∂–∏–º: —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ñ–∞–π–ª\n"
            
            elif agent_name == 'filejob' or config.get('type') == 'fileworker':
                text += "  üìÇ –ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤\n"
            
            elif agent_name == 'rag' or config.get('type') == 'rag':
                text += "  üîç –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ\n"

            elif agent_name == 'nethack' or config.get('type') == 'nethack':
                text += "  üåê –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–æ–≤ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö –∏–∑ —Å–µ—Ç–∏\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏—é –º–∞–∫—Ä–æ-–∫–æ–º–∞–Ω–¥
        text += "\n*üìã –ë—ã—Å—Ç—Ä—ã–µ –º–∞–∫—Ä–æ –∫–æ–º–∞–Ω–¥—ã:*\n"
        text += "_–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ—Å–ª–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞ –≤ \\.md —Ñ–æ—Ä–º–∞—Ç_\n\n"
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –º–∞–∫—Ä–æ-–∫–æ–º–∞–Ω–¥—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        priority_macros = self.parent.get_priority_macro_commands(limit=5)
        
        for cmd_name, description in priority_macros:
            text += f"‚Ä¢ `@{cmd_name}` \\- {escape_markdown_v2(description)}\n"
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞–∫—Ä–æ-–∫–æ–º–∞–Ω–¥
        total_macros = len(self.parent.macro_commands.get_all_commands())
        shown_macros = len(priority_macros)
        
        if total_macros > shown_macros:
            text += f"\n_\\.\\.\\.–∏ –µ—â—ë {total_macros - shown_macros} –∫–æ–º–∞–Ω–¥_\n"
            text += "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `@macros` –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞\n"
        
        text += "\n*üí¨ –†–∞–±–æ—Ç–∞ –≤ —á–∞—Ç\\-—Ä–µ–∂–∏–º–µ:*\n"
        text += "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ `@chat` –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏\n"
        text += "‚Ä¢ –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞\n"
        text += "‚Ä¢ `/stop_chat` \\- –∑–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç\n\n"
        
        text += "*üìÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–µ–π:*\n"
        text += "`/clear_history` \\- –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏ —Ñ–∞–π–ª—ã\n"
        text += "`/export_history` \\- —ç–∫—Å–ø–æ—Ä—Ç –≤ —Ñ–∞–π–ª\n"
        text += "`/history_info` \\- —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ñ–∞–π–ª—ã\n\n"
        
        text += "*üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞–º–∏:*\n"
        text += "`/agent_stop` \\- –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã\n"
        text += "`/agent_status` \\- —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n"
        text += "`/stop_chat` \\- –∑–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç \\(–∞–ª–∏–∞—Å\\)\n\n"

        text += "*–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
        text += "`/agents_pub` \\- –ø—É–±–ª–∏—á–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã\n"
        text += "`/agents_user` \\- –≤–∞—à–∏ –ª–∏—á–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã\n"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
        if hasattr(self.parent, 'chat_handler') and user_id in self.parent.chat_handler.active_chat_sessions:
            agent_name = self.parent.chat_handler.active_chat_sessions[user_id].get('agent_name', 'chat')
            text += f"\n*üü¢ –ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç:* `@{agent_name}`\n"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö –µ—Å–ª–∏ –µ—Å—Ç—å
            if agent_name in self.parent.system_agents:
                agent = self.parent.system_agents[agent_name]
                if hasattr(agent, 'get_user_files_info'):
                    files_info = agent.get_user_files_info(user_id)
                    if files_info['files_count'] > 0:
                        text += f"üìö –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {files_info['files_count']}\n"
            
            text += "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/stop_chat` –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è\n"
        
        text += "\n_üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–º—è –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è_"
        
        await message.reply(text, parse_mode="MarkdownV2")
        
    async def cmd_agents_pub(self, message: types.Message):
        """–°–ø–∏—Å–æ–∫ –ø—É–±–ª–∏—á–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤"""
        user_id = str(message.from_user.id)
        
        if not await self.parent.user_manager.is_active(user_id):
            await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.")
            return
        
        if not self.parent.public_agents:
            await message.reply("*üì¢ –ü—É–±–ª–∏—á–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã*\n\n–ü–æ–∫–∞ –Ω–µ—Ç –ø—É–±–ª–∏—á–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤\\.", parse_mode="MarkdownV2")
            return
        
        text = "*üì¢ –ü—É–±–ª–∏—á–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã:*\n\n"
        
        for agent_name, agent_data in self.parent.public_agents.items():
            config = agent_data.get('config', {})
            owner_id = agent_data.get('owner_id', 'unknown')
            agent_type = config.get('type', 'unknown')
            
            # –î–µ–ª–∞–µ–º –∏–º—è –∞–≥–µ–Ω—Ç–∞ –∫–æ–ø–∏—Ä—É–µ–º—ã–º —á–µ—Ä–µ–∑ inline –∫–æ–¥
            text += f"‚Ä¢ `@{agent_name}`"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–∞ –∞–≥–µ–Ω—Ç–∞
            if agent_type == 'chat':
                text += " üí¨"
            elif agent_type == 'rag':
                text += " üîç"
            elif agent_type == 'fileworker':
                text += " üìÇ"
            
            text += f"\n"
            text += f"  {escape_markdown_v2(config.get('description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'))}\n\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        text += "_üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–º—è –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è_"
        
        await message.reply(text, parse_mode="MarkdownV2")
        
    async def cmd_agents_user(self, message: types.Message):
        """–°–ø–∏—Å–æ–∫ –ª–∏—á–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user_id = str(message.from_user.id)
        
        if not await self.parent.user_manager.is_active(user_id):
            await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.")
            return
        
        user_agents = self.parent.user_agents.get(user_id, {})
        
        if not user_agents:
            text = "*üë§ –í–∞—à–∏ –ª–∏—á–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã*\n\n"
            text += "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ª–∏—á–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤\\.\n\n"
            text += "–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞:\n"
            text += "1\\. –°–∫–∞—á–∞–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞: `@rag config` –∏–ª–∏ `@chat config`\n"
            text += "2\\. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ \\.json —Ñ–∞–π–ª\n"
            text += "3\\. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –±–æ—Ç—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞"
            await message.reply(text, parse_mode="MarkdownV2")
            return
        
        text = "*üë§ –í–∞—à–∏ –ª–∏—á–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã:*\n\n"
        
        for agent_name, config in user_agents.items():
            agent_type = config.get('type', 'unknown')
            
            # –î–µ–ª–∞–µ–º –∏–º—è –∞–≥–µ–Ω—Ç–∞ –∫–æ–ø–∏—Ä—É–µ–º—ã–º
            text += f"‚Ä¢ `@{agent_name}`"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–∞
            if agent_type == 'chat':
                text += " üí¨"
            elif agent_type == 'rag':
                text += " üîç"
            elif agent_type == 'fileworker':
                text += " üìÇ"
            
            text += f"\n"
            text += f"  {escape_markdown_v2(config.get('description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'))}\n\n"
        
        text += "_üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–º—è –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è_"
        
        await message.reply(text, parse_mode="MarkdownV2")
        
    async def cmd_stop_chat(self, message: types.Message, state: FSMContext):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞"""
        user_id = str(message.from_user.id)
        
        if hasattr(self.parent, 'chat_handler') and user_id in self.parent.chat_handler.active_chat_sessions:
            agent_name = self.parent.chat_handler.active_chat_sessions[user_id].get('agent_name', 'chat')
            del self.parent.chat_handler.active_chat_sessions[user_id]
            await state.clear()
            await message.reply(
                f"‚úÖ –ß–∞—Ç —Å –∞–≥–µ–Ω—Ç–æ–º *@{escape_markdown_v2(agent_name)}* –∑–∞–≤–µ—Ä—à–µ–Ω\\.\n\n"
                "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã\\.",
                parse_mode="MarkdownV2"
            )
        else:
            await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞\\.", parse_mode="MarkdownV2")

    async def cmd_clear_history(self, message: types.Message):
        """–û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∏ –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
        user_id = str(message.from_user.id)
    
        if not await self.parent.user_manager.is_active(user_id):
            await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.")
            return
    
        # –ü–æ–ª—É—á–∞–µ–º chat –∞–≥–µ–Ω—Ç–∞ (–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–≥–æ)
        chat_agent = None
    
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
        if hasattr(self.parent, 'chat_handler') and user_id in self.parent.chat_handler.active_chat_sessions:
            agent_name = self.parent.chat_handler.active_chat_sessions[user_id].get('agent_name', 'chat')
            chat_agent = await self.parent._get_agent_instance(user_id, agent_name)
    
        # 2. –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–≥–æ chat –∞–≥–µ–Ω—Ç–∞
        if not chat_agent and hasattr(self.parent, '_last_agent_used'):
            last_agent = self.parent._last_agent_used.get(user_id)
            if last_agent:
                agent = await self.parent._get_agent_instance(user_id, last_agent)
                if agent and hasattr(agent, 'get_config'):
                    config = agent.get_config()
                    if config.get('type') == 'chat':
                        chat_agent = agent
    
        # 3. –ï—Å–ª–∏ –≤—Å—ë –µ—â—ë –Ω–µ—Ç, –ø–æ–ª—É—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π chat –∞–≥–µ–Ω—Ç
        if not chat_agent:
            chat_agent = self.parent.system_agents.get('chat')
    
        if not chat_agent:
            await message.reply("‚ùå Chat –∞–≥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω", parse_mode="MarkdownV2")
            return
    
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π
        files_info = None
        if hasattr(chat_agent, 'get_user_files_info'):
            files_info = chat_agent.get_user_files_info(user_id)
    
        if chat_agent.clear_user_history(user_id):
            msg = "‚úÖ *–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞*\n\n"
        
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—á–∏—â–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
            if files_info and files_info['files_count'] > 0:
                msg += f"üóëÔ∏è –¢–∞–∫–∂–µ —É–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: *{files_info['files_count']}*\n"
                if files_info['total_size'] >= 1024*1024:
                    size_str = f"{files_info['total_size']/(1024*1024):.1f} –ú–ë"
                elif files_info['total_size'] >= 1024:
                    size_str = f"{files_info['total_size']/1024:.1f} –ö–ë"
                else:
                    size_str = f"{files_info['total_size']} –±–∞–π—Ç"
                msg += f"üìä –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ: *{escape_markdown_v2(size_str)}*\n\n"
        
            msg += "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞\\."
        
            await message.reply(msg, parse_mode="MarkdownV2")
        else:
            await message.reply(
                "‚ÑπÔ∏è *–ò—Å—Ç–æ—Ä–∏—è —É–∂–µ –ø—É—Å—Ç–∞*\n\n"
                "–£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞\\.",
                parse_mode="MarkdownV2"
            )            

        chat_agent.clear_user_files(user_id)
       
    async def cmd_export_history(self, message: types.Message):
        """–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –≤ —Ñ–∞–π–ª"""
        user_id = str(message.from_user.id)
    
        if not await self.parent.user_manager.is_active(user_id):
            await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.")
            return
    
        # –ü–æ–ª—É—á–∞–µ–º chat –∞–≥–µ–Ω—Ç–∞
        chat_agent = None
    
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
        if hasattr(self.parent, 'chat_handler') and user_id in self.parent.chat_handler.active_chat_sessions:
            agent_name = self.parent.chat_handler.active_chat_sessions[user_id].get('agent_name', 'chat')
            chat_agent = await self.parent._get_agent_instance(user_id, agent_name)
    
        # 2. –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–≥–æ chat –∞–≥–µ–Ω—Ç–∞
        if not chat_agent and hasattr(self.parent, '_last_agent_used'):
            last_agent = self.parent._last_agent_used.get(user_id)
            if last_agent:
                agent = await self.parent._get_agent_instance(user_id, last_agent)
                if agent and hasattr(agent, 'get_config'):
                    config = agent.get_config()
                    if config.get('type') == 'chat':
                        chat_agent = agent
    
        # 3. –ï—Å–ª–∏ –≤—Å—ë –µ—â—ë –Ω–µ—Ç, –ø–æ–ª—É—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π chat –∞–≥–µ–Ω—Ç
        if not chat_agent:
            chat_agent = self.parent.system_agents.get('chat')
    
        if not chat_agent:
            await message.reply("‚ùå Chat –∞–≥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω", parse_mode="MarkdownV2")
            return
    
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é
        history_text = chat_agent.export_history(user_id)
    
        if history_text == "–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞":
            await message.reply(
                "‚ÑπÔ∏è *–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞*\n\n"
                "–£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞\\.",
                parse_mode="MarkdownV2"
            )
            return
    
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∏—Å—Ç–æ—Ä–∏–µ–π
        file_content = f"# –≠–∫—Å–ø–æ—Ä—Ç –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞\n\n"
        file_content += f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {message.from_user.full_name}\n"
        file_content += f"**ID:** {user_id}\n"
        file_content += f"**–î–∞—Ç–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n"
        file_content += "---\n\n"
        file_content += history_text
    
        file_bytes = file_content.encode('utf-8')
        input_file = BufferedInputFile(
            file=file_bytes,
            filename=f"chat_history_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
        )
    
        await message.reply_document(
            document=input_file,
            caption="üìú *–≠–∫—Å–ø–æ—Ä—Ç –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞*\n\n–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª",
            parse_mode="MarkdownV2"
        )

    async def cmd_history_info(self, message: types.Message):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö"""
        user_id = str(message.from_user.id)
        
        if not await self.parent.user_manager.is_active(user_id):
            await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º chat –∞–≥–µ–Ω—Ç–∞ (–ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–ª–∏ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ)
        chat_agent = None
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
        if hasattr(self.parent, 'chat_handler') and user_id in self.parent.chat_handler.active_chat_sessions:
            agent_name = self.parent.chat_handler.active_chat_sessions[user_id].get('agent_name', 'chat')
            chat_agent = await self.parent._get_agent_instance(user_id, agent_name)
        
        # 2. –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–≥–æ chat –∞–≥–µ–Ω—Ç–∞
        if not chat_agent and hasattr(self.parent, '_last_agent_used'):
            last_agent = self.parent._last_agent_used.get(user_id)
            if last_agent:
                agent = await self.parent._get_agent_instance(user_id, last_agent)
                if agent and hasattr(agent, 'get_config'):
                    config = agent.get_config()
                    if config.get('type') == 'chat':
                        chat_agent = agent
        
        # 3. –ï—Å–ª–∏ –≤—Å—ë –µ—â—ë –Ω–µ—Ç, –ø–æ–ª—É—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π chat –∞–≥–µ–Ω—Ç
        if not chat_agent:
            chat_agent = self.parent.system_agents.get('chat')
        
        if not chat_agent or not hasattr(chat_agent, 'get_user_history'):
            await message.reply("‚ùå Chat –∞–≥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω", parse_mode="MarkdownV2")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∞–≥–µ–Ω—Ç–∞
        history = chat_agent.get_user_history(user_id)
        config = chat_agent.get_config()
        history_config = config.get('history', {})
        file_config = config.get('file_context', {})
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ —Ä–æ–ª—è–º
        user_messages = sum(1 for msg in history if msg['role'] == 'user')
        assistant_messages = sum(1 for msg in history if msg['role'] == 'assistant')
        system_messages = sum(1 for msg in history if msg['role'] == 'system')
        
        text = "*üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞*\n\n"
        
        text += "*–ù–∞—Å—Ç—Ä–æ–π–∫–∏:*\n"
        text += f"‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è: {'‚úÖ –í–∫–ª—é—á–µ–Ω–∞' if history_config.get('enabled', True) else '‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞'}\n"
        text += f"‚Ä¢ –ú–∞–∫—Å–∏–º—É–º —Å–æ–æ–±—â–µ–Ω–∏–π: {escape_markdown_v2(str(history_config.get('max_messages', 20)))}\n"
        text += f"‚Ä¢ –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã: {'‚úÖ –°–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è' if history_config.get('include_system', False) else '‚ùå –ù–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è'}\n"
        text += f"‚Ä¢ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ñ–∞–π–ª–∞: {'‚úÖ –î–∞' if history_config.get('clear_on_context_change', True) else '‚ùå –ù–µ—Ç'}\n"
        text += f"‚Ä¢ –û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å –∏—Å—Ç–æ—Ä–∏–µ–π: {'‚úÖ –î–∞' if history_config.get('clear_files_on_history_clear', True) else '‚ùå –ù–µ—Ç'}\n\n"
        
        text += "*–†–µ–∂–∏–º —Ñ–∞–π–ª–æ–≤:*\n"
        multi_mode = file_config.get('multi_file_mode', 'merge')
        if multi_mode == 'merge':
            text += "‚Ä¢ üìö –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ –æ–¥–∏–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç\n"
        else:
            text += "‚Ä¢ üìÑ –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª\n"
        text += f"‚Ä¢ –ú–∞–∫—Å\\. —Ä–∞–∑–º–µ—Ä: {escape_markdown_v2(str(file_config.get('max_content_length', 200000)))} —Å–∏–º–≤–æ–ª–æ–≤\n\n"
        
        text += "*–¢–µ–∫—É—â–∞—è –∏—Å—Ç–æ—Ä–∏—è:*\n"
        text += f"‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(history)}\n"
        text += f"‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_messages}\n"
        text += f"‚Ä¢ –û—Ç–≤–µ—Ç–æ–≤ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: {assistant_messages}\n"
        if system_messages > 0:
            text += f"‚Ä¢ –°–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {system_messages}\n"
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
        if hasattr(chat_agent, 'get_user_files_info'):
            files_info = chat_agent.get_user_files_info(user_id)
            if files_info['files_count'] > 0:
                text += "\n*–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:*\n"
                text += f"‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {files_info['files_count']}\n"
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ñ–∞–π–ª–æ–≤
                for i, file in enumerate(files_info['files'][:5]):
                    text += f"  {i+1}\\. {escape_markdown_v2(file['filename'])} "
                    if file['size'] >= 1024:
                        size_kb = file['size']/1024
                        text += f"\\({escape_markdown_v2(f'{size_kb:.1f}')} –ö–ë\\)\n"
                    else:
                        text += f"\\({file['size']} –±–∞–π—Ç\\)\n"
                    
                if files_info['files_count'] > 5:
                    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç—Ä–∏ —Ç–æ—á–∫–∏
                    text += f"  \\.\\.\\.–∏ –µ—â—ë {files_info['files_count'] - 5} —Ñ–∞–π–ª–æ–≤\n"
                
                if files_info['total_size'] >= 1024*1024:
                    size_mb = files_info['total_size']/(1024*1024)
                    text += f"‚Ä¢ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {escape_markdown_v2(f'{size_mb:.1f}')} –ú–ë\n"
                elif files_info['total_size'] >= 1024:
                    size_kb = files_info['total_size']/1024
                    text += f"‚Ä¢ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {escape_markdown_v2(f'{size_kb:.1f}')} –ö–ë\n"
                else:
                    text += f"‚Ä¢ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {files_info['total_size']} –±–∞–π—Ç\n"
        
        if history:
            first_time = history[0].get('timestamp', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            last_time = history[-1].get('timestamp', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            
            text += f"\n‚Ä¢ –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {escape_markdown_v2(first_time[:19] if first_time != '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ' else first_time)}\n"
            text += f"‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {escape_markdown_v2(last_time[:19] if last_time != '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ' else last_time)}\n"
        
        text += "\n*–ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:*\n"
        text += "/clear\\_history \\- –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∏ —Ñ–∞–π–ª—ã\n"
        text += "/export\\_history \\- —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ñ–∞–π–ª\n"
        
        await message.reply(text, parse_mode="MarkdownV2")